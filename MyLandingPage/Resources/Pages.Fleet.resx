<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Fleet_Title" xml:space="preserve">
    <value>Our Fleet</value>
  </data>
  <data name="Fleet_Subtitle" xml:space="preserve">
    <value>We train on new, modern sailing and motor yachts, just like those you can charter anywhere in the world. You should learn on the type of boat you plan to sail.</value>
  </data>
  <data name="Fleet_Jeanneau_Name" xml:space="preserve">
    <value>Sailing Yacht Jeanneau Sun Odyssey 439</value>
  </data>
  <data name="Fleet_Jeanneau_Desc" xml:space="preserve">
    <value>A modern 13-meter cruising sailing yacht with 4 cabins. The top-tier Premier equipment package offers maximum comfort and a full set of gear for training. The large sail area (100 m² + 125 m² gennaker) is great for practicing various sailing techniques, and the bow thruster makes docking easier.</value>
  </data>
  <data name="Fleet_Jeanneau_Length" xml:space="preserve">
    <value>Length: 43 ft (13 m)</value>
  </data>
  <data name="Fleet_Jeanneau_Draft" xml:space="preserve">
    <value>Draft: 2.2 m</value>
  </data>
  <data name="Fleet_Jeanneau_Cabins" xml:space="preserve">
    <value>Cabins: 4 (8 berths)</value>
  </data>
  <data name="Fleet_Jeanneau_WC" xml:space="preserve">
    <value>Hot water &amp; WC: Yes</value>
  </data>
  <data name="Fleet_Jeanneau_SailArea" xml:space="preserve">
    <value>Sail area: 100 m² (+ gennaker 125 m²)</value>
  </data>
  <data name="Fleet_Jeanneau_BowThruster" xml:space="preserve">
    <value>Bow thruster: Yes</value>
  </data>
  <data name="Fleet_Jeanneau_Equipment" xml:space="preserve">
    <value>Equipment: Premier</value>
  </data>
  <data name="Fleet_Beneteau_Name" xml:space="preserve">
    <value>Motor Yacht Beneteau Antares 32</value>
  </data>
  <data name="Fleet_Beneteau_Desc" xml:space="preserve">
    <value>A modern 10-meter motor yacht with two powerful diesel engines. It has everything needed for comfortable cruising: 2 cabins, hot water, a toilet, and a flybridge with a second helm station. The presence of a bow thruster and modern Raymarine electronics (radar, autopilot, chartplotter) makes training on this yacht very close to real charter conditions.</value>
  </data>
  <data name="Fleet_Beneteau_Length" xml:space="preserve">
    <value>Length: 32 ft (10 m)</value>
  </data>
  <data name="Fleet_Beneteau_Engines" xml:space="preserve">
    <value>Engines: 2 × 200 HP (diesel)</value>
  </data>
  <data name="Fleet_Beneteau_Cabins" xml:space="preserve">
    <value>Cabins: 2 (4 berths)</value>
  </data>
  <data name="Fleet_Beneteau_WC" xml:space="preserve">
    <value>Hot water &amp; WC: Yes</value>
  </data>
  <data name="Fleet_Beneteau_Flybridge" xml:space="preserve">
    <value>Flybridge with helm: Yes</value>
  </data>
  <data name="Fleet_Beneteau_Electronics" xml:space="preserve">
    <value>Radar, autopilot, chartplotter (Raymarine): Yes</value>
  </data>
  <data name="Fleet_Beneteau_BowThruster" xml:space="preserve">
    <value>Bow thruster: Yes</value>
  </data>
  <data name="PageTitle_Fleet" xml:space="preserve">
    <value>Our Yacht Fleet — Charter &amp; Hire in Montenegro | VibeOfTheWave</value>
  </data>
  <data name="Meta_Description_Fleet" xml:space="preserve">
    <value>Explore our yacht fleet in Montenegro: modern sailing yachts, catamarans, and motorboats for charter and hire. Choose your perfect yacht with VibeOfTheWave and start your adventure on the Adriatic Sea!</value>
  </data>
</root>